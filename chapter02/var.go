// 일자 : 2021 -03 - 06
// 학습 : 연산자
// 기본적으로 C와 유사한게 선언및 활용이 가능하고
// printf : C언어와 같이 %v <-의 선언을 통해 변수 호출 가능
// println : 노드 파이선 자바 처럼 + 의 형식으로 값을 호출 및 붙여주는 기능을 한다
// 주요 기능사항
// GO와 같은경우에는 데드 코드를 방지하기 위해서 언어의 자체적으로 호출되지 않은 변수가 존재하면 에러
// 처리를 하기때문에 이점에 주의 하여 선언해야 된다 만약 이게 너무 힘들다면
// _ = i <- 와 같이 아무런 의미없는 코드를 선언하거나 하여 처리 과정을 넣거나 주석처리가 필요되어진다.
//
package main

import (
	"fmt"
)

func main() {
	a := 4
	b := 2
	d := "안녕하세여!"
	var c int
	c = a + b
	fmt.Print(d)
	fmt.Println(c)
	fmt.Printf("a ^ b = %v \n", a^b)
	fmt.Println("a & b ", a&b)

}
